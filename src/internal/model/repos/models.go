// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package repos

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type PostsStatus string

const (
	PostsStatusDraft     PostsStatus = "draft"
	PostsStatusPublished PostsStatus = "published"
)

func (e *PostsStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PostsStatus(s)
	case string:
		*e = PostsStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PostsStatus: %T", src)
	}
	return nil
}

type NullPostsStatus struct {
	PostsStatus PostsStatus
	Valid       bool // Valid is true if PostsStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPostsStatus) Scan(value interface{}) error {
	if value == nil {
		ns.PostsStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PostsStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPostsStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PostsStatus), nil
}

type UsersRole string

const (
	UsersRoleAdmin      UsersRole = "admin"
	UsersRoleAuthor     UsersRole = "author"
	UsersRoleSubscriber UsersRole = "subscriber"
)

func (e *UsersRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersRole(s)
	case string:
		*e = UsersRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersRole: %T", src)
	}
	return nil
}

type NullUsersRole struct {
	UsersRole UsersRole
	Valid     bool // Valid is true if UsersRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersRole) Scan(value interface{}) error {
	if value == nil {
		ns.UsersRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersRole), nil
}

type Category struct {
	CategoryID       int32
	ParentCategoryID sql.NullInt32
	Name             string
	Slug             string
}

type Image struct {
	ImageID int32
	Url     string
	Name    sql.NullString
}

type Post struct {
	PostID      int32
	UserID      sql.NullInt32
	Title       string
	Slug        string
	ThumbnailID sql.NullInt32
	Body        string
	Status      PostsStatus
	Private     bool
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

type PostCategory struct {
	PostID     int32
	CategoryID int32
}

type PostTag struct {
	PostID int32
	TagID  int32
}

type Siteinfo struct {
	SiteID         bool
	SiteTitle      sql.NullString
	SiteName       sql.NullString
	SiteLogoID     sql.NullInt32
	SiteAbout      sql.NullString
	SiteCopyright  sql.NullString
	ContactAddress sql.NullString
	ContactEmail   sql.NullString
	ContactPhone   sql.NullString
}

type Tag struct {
	TagID int32
	Name  string
	Slug  string
}

type User struct {
	UserID    int32
	Firstname string
	Lastname  string
	Phone     string
	Email     string
	Password  string
	AvatarID  sql.NullInt32
	Role      UsersRole
	CreatedAt time.Time
	UpdatedAt time.Time
}
